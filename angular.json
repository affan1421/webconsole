{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "metronic": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "kt",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist",
            "index": "src/index.html",
            "main": "src/main.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.app.json",
            "aot": true,
            "assets": [
              "src/favicon.ico",
              "src/assets",
              {
                "glob": "**/*",
                "input": "node_modules/tinymce/skins",
                "output": "/tinymce/skins/"
              },
              {
                "glob": "**/*",
                "input": "node_modules/tinymce/themes",
                "output": "/tinymce/themes/"
              },
              {
                "glob": "**/*",
                "input": "node_modules/tinymce/plugins",
                "output": "/tinymce/plugins/"
              },
              {
                "glob": "**/*",
                "input": "node_modules/@wiris/mathtype-tinymce5",
                "output": "/tinymce/plugins/tiny_mce_wiris/"
              },
              {
                "glob": "**/*",
                "input": "node_modules/tinymce",
                "output": "/tinymce/"
              },
              "src/.htaccess"
            ],
            "styles": [
              "src/styles.scss",
              "node_modules/tinymce/skins/ui/oxide/skin.min.css",
              "node_modules/tinymce/skins/ui/oxide/content.min.css",
              "node_modules/tinymce/skins/content/default/content.min.css"
            ],
            "scripts": [
              "node_modules/tinymce/tinymce.min.js",
              "node_modules/popper.js/dist/umd/popper.js",
              "node_modules/tinymce/tinymce.min.js",
              "node_modules/tooltip.js/dist/umd/tooltip.min.js",
              "node_modules/perfect-scrollbar/dist/perfect-scrollbar.js",
              "node_modules/clipboard/dist/clipboard.js",
              "node_modules/apexcharts/dist/apexcharts.min.js",
              "src/assets/js/layout/extended/examples.js",
              "node_modules/tinymce/plugins/link/plugin.min.js",
              "node_modules/tinymce/plugins/paste/plugin.min.js",
              "node_modules/tinymce/plugins/codesample/plugin.min.js",
              "node_modules/tinymce/plugins/image/plugin.min.js",
              "node_modules/tinymce/plugins/code/plugin.min.js",
              "node_modules/tinymce/plugins/table/plugin.min.js",
              "node_modules/tinymce/plugins/autoresize/plugin.min.js",
              "node_modules/tinymce/plugins/autoresize/plugin.js"
            ],
            "es5BrowserSupport": true
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "100mb",
                  "maximumError": "130mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "366kb",
                  "maximumError": "1200kb"
                }
              ]
            },
            "prod": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ]
            },
            "preprod": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.preprod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "metronic:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "metronic:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "metronic:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.spec.json",
            "karmaConfig": "karma.conf.js",
            "styles": [
              "src/styles.scss"
            ],
            "scripts": [],
            "assets": [
              "src/assets"
            ]
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "tsconfig.app.json",
              "tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    },
    "metronic-e2e": {
      "root": "e2e/",
      "projectType": "application",
      "prefix": "",
      "architect": {
        "e2e": {
          "builder": "@angular-devkit/build-angular:protractor",
          "options": {
            "protractorConfig": "e2e/protractor.conf.js",
            "devServerTarget": "metronic:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "metronic:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": "e2e/tsconfig.e2e.json",
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    }
  },
  "defaultProject": "metronic",
  "cli": {
    "analytics": "b1dfc39d-aa30-4e3a-8d5a-d646228c4f05"
  }
}